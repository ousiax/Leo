<Window x:Class="Leo.Wpf.App.Views.NewCustomerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:Leo.Wpf.App.ViewModels"
        xmlns:local="clr-namespace:Leo.Wpf.App"
        xmlns:infra="clr-namespace:Leo.Wpf.App.Infrastructure"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModel:NewCustomerViewModel}"
        Title="{StaticResource NewCustomerWindow.Title}"
        WindowStyle="ToolWindow"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="BaseStyle">
            <Setter Property="Control.MinWidth" Value="150" />
            <Setter Property="Control.Margin" Value="2,0,5,0" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Margin" Value="0,1,0,1" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Control.ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Label">
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Background" Value="Gainsboro"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,1,2,1" />
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource BaseStyle}">
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource BaseStyle}">
        </Style>
        <Style TargetType="DatePickerTextBox" BasedOn="{StaticResource BaseStyle}">
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="0,5,5,0" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="MinHeight" Value="30" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Grid Margin="5,5,5,5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Label Content="{StaticResource NewCustomerWindow.Label.Name.Content}" Target="{Binding ElementName=txtName}" />
            <TextBox x:Name="txtName" Text="{Binding Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.ToolTip>
                    <ToolTip Visibility="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                             Content="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.(Validation.Errors)[0].ErrorContent}">
                    </ToolTip>
                </TextBox.ToolTip>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Border BorderBrush="Red" BorderThickness="1" ToolTip="{Binding Path=ErrorContent}">
                            <AdornedElementPlaceholder/>
                        </Border>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Label Content="{StaticResource NewCustomerWindow.Label.Birthday.Content}" />
            <DatePickerTextBox
                x:Name="txtBirthday"
                Text="{Binding Birthday, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, StringFormat={StaticResource NewCustomerWindow.Label.Birthday.StringFormat}}"/>
        </StackPanel>
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Label Content="{StaticResource NewCustomerWindow.Label.Gender.Content}" />
            <ComboBox x:Name="txtGender"
                      ItemsSource="{x:Static infra:Constants.Genders}"
                      SelectedValuePath="Key"
                      DisplayMemberPath="Value"
                      SelectedValue="{Binding Gender, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal">
            <Label Content="{StaticResource NewCustomerWindow.Label.Phone.Content}" />
            <TextBox x:Name="txtPhone" Text="{Binding Phone, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Grid.Row="4" Orientation="Horizontal">
            <Label Content="{StaticResource NewCustomerWindow.Label.CardNo.Content}" />
            <TextBox x:Name="txtCarNo" Text="{Binding CardNo, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Grid.Row="5" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button x:Name="btnOK"
                    Command="{Binding SaveCommand}"
                    Content="{StaticResource NewCustomerWindow.Button.OK.Content}"
                    IsDefault="True" />
            <Button x:Name="btnCancel"
                    Command="{Binding CloseCommand}"
                    Content="{StaticResource NewCustomerWindow.Button.Cancel.Content}"
                    IsCancel="True" />
        </StackPanel>
    </Grid>
</Window>
