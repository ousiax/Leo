<Window x:Class="Leo.Wpf.App.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:Leo.Wpf.App.Converters"
        xmlns:viewModel="clr-namespace:Leo.Wpf.App.ViewModels"
        mc:Ignorable="d"
        Icon="../leon.ico"
        Title="{StaticResource MainWindow.Title}" Height="450" Width="800"
        d:DataContext="{d:DesignInstance viewModel:MainWindowViewModel}">
    <Window.Resources>
        <converter:BooleanInverseConverter x:Key="BooleanInverseConverter" />
        <converter:GenderToStringConverter x:Key="GenderToStringConverter" />
        <Style TargetType="Label">
            <Setter Property="MinWidth" Value="80"></Setter>
            <Setter Property="Background" Value="Gainsboro"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Margin" Value="2,0,5,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="IsEnabled" Value="False" />
        </Style>
        <Style TargetType="WrapPanel">
            <Setter Property="Margin" Value="0,2,0,2" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ToolBarTray Grid.Row="0">
            <ToolBar>
                <Button Content="{StaticResource MainWindow.ToolBar.Button.New.Content}"
                        Command="{Binding NewCustomerCommand}"/>
                <Button Content="{StaticResource MainWindow.ToolBar.Button.Edit.Content}"
                        Command="{Binding EditCustomerCommand}"
                        CommandParameter="{Binding CurrentCustomer}"/>
                <Button Content="{StaticResource MainWindow.ToolBar.Button.Find.Content}"
                        Command="{Binding FindCustomerCommand}" />
                <Button Content="{StaticResource MainWindow.ToolBar.Button.Echo.Content}" />
            </ToolBar>
        </ToolBarTray>
        <StackPanel Grid.Row="1">
            <WrapPanel>
                <Label Content="{StaticResource MainWindow.Label.Name.Content}" Target="{Binding ElementName=txtName}" />
                <TextBox x:Name="txtName" Text="{Binding CurrentCustomer.Name}" />

                <Label Content="{StaticResource MainWindow.Label.Phone.Content}" Target="{Binding ElementName=txtPhone}" />
                <TextBox x:Name="txtPhone" Text="{Binding CurrentCustomer.Phone}" />

                <Label Content="{StaticResource MainWindow.Label.Gender.Content}" Target="{Binding ElementName=txtGender}" />
                <TextBox x:Name="txtGender" Text="{Binding CurrentCustomer.Gender, Converter={StaticResource GenderToStringConverter}}" />
            </WrapPanel>
            <WrapPanel>
                <Label Content="{StaticResource MainWindow.Label.Birthday.Content}" Target="{Binding ElementName=txtBirthday}" />
                <TextBox x:Name="txtBirthday" Text="{Binding CurrentCustomer.Birthday, StringFormat={StaticResource MainWindow.Label.Birthday.StringFormat}}" />

                <Label Content="{StaticResource MainWindow.Label.Age.Content}" Target="{Binding ElementName=txtAge}" />
                <TextBox x:Name="txtAge" Text="{Binding CurrentCustomer.Age, Mode=OneWay}" />

                <Label Content="{StaticResource MainWindow.Label.CardNo.Content}" Target="{Binding ElementName=txtCardNo}" />
                <TextBox x:Name="txtCardNo" Text="{Binding CurrentCustomer.CardNo}" />
            </WrapPanel>
        </StackPanel>
        <DataGrid Grid.Row="2"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  ItemsSource="{Binding CurrentCustomer.Details}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{StaticResource MainWindow.DataGrid.ContextMenu.MenuItem.New}"
                              Command="{Binding NewCustomerDetailCommand}"
                              CommandParameter="{Binding CurrentCustomer.Id}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="colDate"
                                    Header="{StaticResource MainWindow.DataGrid.Columns.Date.Header}"
                                    Width="*"
                                    Binding="{Binding Date, StringFormat={StaticResource MainWindow.DataGrid.Columns.Date.StringFormat}}"></DataGridTextColumn>
                <DataGridTextColumn x:Name="colItem"
                                    Header="{StaticResource MainWindow.DataGrid.Columns.Item.Header}"
                                    Width="*"
                                    Binding="{Binding Item}"></DataGridTextColumn>
                <DataGridTextColumn x:Name="colCount" 
                                    Header="{StaticResource MainWindow.DataGrid.Columns.Count.Header}" 
                                    Width="*" 
                                    Binding="{Binding Count}"></DataGridTextColumn>
                <DataGridTextColumn x:Name="colHeight"
                                    Header="{StaticResource MainWindow.DataGrid.Columns.Height.Header}" 
                                    Width="*" Binding="{Binding Height}"></DataGridTextColumn>
                <DataGridTextColumn x:Name="colWeight"
                                    Header="{StaticResource MainWindow.DataGrid.Columns.Weight.Header}" 
                                    Width="*" 
                                    Binding="{Binding Weight}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ProgressBar Grid.Row="3" IsIndeterminate="True" />
    </Grid>
</Window>
